# -*- coding: utf-8 -*-
"""Quantum ESPRESSO on cloud.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1JU3gg-pOUfOv7nN3PVZK2js79STJJR90

First, we need to install Quantum Espresso in Google Colab. To do this, copy the below code and paste it into the first cell.
"""

# Commented out IPython magic to ensure Python compatibility.
# %%capture
# # Clone the QE git
# !git clone https://github.com/QEF/q-e.git
# # Install the dependencies
# !apt-get install -y libfftw3-3 libfftw3-dev libfftw3-doc
# # enter the q-e folder
# %cd q-e
# # run the configure file
# # !DFLAGS='-D__OPENMP -D__FFTW3 -D__MPI -D__SCALAPACK' FFT_LIBS='-lfftw3'  ./configure --enable-openmp
# !!DFLAGS='-D__FFTW3 ' FFT_LIBS='-lfftw3'  ./configure

"""Now we need to install the Atomic Simulation Environment (ASE) for setting up, manipulating, running, visualizing, and analyzing atomistic simulations. To do this, copy and paste the below code into the next cell."""

# Commented out IPython magic to ensure Python compatibility.
# %%capture
# !apt install ase

"""After that, we need to prepare the notebook for running and capturing output. To do this, copy and paste the below code into the next cell."""

# Commented out IPython magic to ensure Python compatibility.
# %%capture
# !make pw

"""Now we need to make a project folder and move all the required pseudopotentials inside that folder.

Now we will enter the project directory (folder). To do this, copy and paste the below code into the next cell. Change the folder name according to your folder instead of 'Si'.
"""

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/Si/

pwd

"""Now we will write the input file for the calculation. To do so, copy the input file that was generated by Materials Cloud and paste it inside, ''' '''"""

qe_input = """
/ paste your input file code here.
&CONTROL
  calculation = 'scf'
  etot_conv_thr =   2.0000000000d-05
  forc_conv_thr =   1.0000000000d-04
  outdir = './out/'
  prefix = 'Si'
  pseudo_dir = '.'
  tprnfor = .true.
  tstress = .true.
  verbosity = 'high'
/
&SYSTEM
  degauss =   2.0000000000d-02
  ecutrho =   2.4000000000d+02
  ecutwfc =   3.0000000000d+01
  ibrav = 0
  nat = 2
  nosym = .false.
  ntyp = 1
  occupations = 'fixed'
/
&ELECTRONS
  conv_thr =   4.0000000000d-10
  electron_maxstep = 80
  mixing_beta =   4.0000000000d-01
/
ATOMIC_SPECIES
Si     28.0855 Si.pbe-n-rrkjus_psl.1.0.0.UPF
ATOMIC_POSITIONS crystal
Si           0.0000000000       0.0000000000       0.0000000000
Si           0.7500000000       0.7500000000       0.7500000000
K_POINTS automatic
5 5 5 0 0 0
CELL_PARAMETERS angstrom
     -2.7218511850      -2.7218511850       0.0000000000
     -2.7218511850       0.0000000000      -2.7218511850
     -0.0000000000      -2.7218511850      -2.7218511850
"""

# We write the input script
with open("pwscf.in", "w") as f:
    f.write(qe_input)

"""Now we will give the run command. To do that -"""

! /content/q-e/bin/pw.x  -in pwscf.in > pwscf.out